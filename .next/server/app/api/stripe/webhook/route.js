"use strict";(()=>{var e={};e.id=757,e.ids=[757],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2081:e=>{e.exports=require("child_process")},6113:e=>{e.exports=require("crypto")},2361:e=>{e.exports=require("events")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},3837:e=>{e.exports=require("util")},3472:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>v,patchFetch:()=>E,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>f,staticGenerationAsyncStorage:()=>x});var o={};t.r(o),t.d(o,{POST:()=>h,dynamic:()=>d,preferredRegion:()=>c,runtime:()=>p});var s=t(9303),i=t(8716),n=t(670),u=t(7070),a=t(9206);let p="nodejs",d="force-dynamic",c="auto";async function h(e){let r=(0,a.d)(),t=e.headers.get("stripe-signature"),o=process.env.STRIPE_WEBHOOK_SECRET;if(!t||!o)return u.NextResponse.json({error:"Missing signature"},{status:400});let s=Buffer.from(await e.arrayBuffer());try{return r.webhooks.constructEvent(s,t,o),u.NextResponse.json({received:!0})}catch(e){return u.NextResponse.json({error:`Webhook Error: ${e.message}`},{status:400})}}let l=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/stripe/webhook/route",pathname:"/api/stripe/webhook",filename:"route",bundlePath:"app/api/stripe/webhook/route"},resolvedPagePath:"/home/duvet05/theme-outliers-academy/app/api/stripe/webhook/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:m,staticGenerationAsyncStorage:x,serverHooks:f}=l,v="/api/stripe/webhook/route";function E(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:x})}},9206:(e,r,t)=>{t.d(r,{d:()=>i});var o=t(8472);let s=null;function i(){if(s)return s;let e=process.env.STRIPE_SECRET_KEY;if(!e)throw Error("STRIPE_SECRET_KEY is not set");return s=new o.Z(e,{apiVersion:"2024-06-20"})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[948,972,472],()=>t(3472));module.exports=o})();